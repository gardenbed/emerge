// This is a test grammar to cover all features of EBNF
grammar test;

SEMI   = ";"
ID     = $IDN     // Invalid predef
NUMBER = /[0-9+/  // Invalid regex

@left  "*" "/"
@left  "+" "-"
@right <expr = expr bitop expr> <expr = expr logop expr>
@none  "="

program   = {decl} {{stmt}};
decl      = type ID ["=" expr] SEMI;
type      = "int" | "float" | "void";
stmt      = assign | if_stmt;
assign    = ID "=" expr;
if_stmt   = "if" "(" expr ")" else_stmt;
else_stmt = "else" stmt | ;
expr      = expr ("+" | "-" | "*" | "/") expr | expr bitop expr  | expr logop expr | "!" expr | NUMBER | ID;
bitop     = "|" | "&" | "^";
logop     = "==" | "!=" | "<" | ">" | "<=" | ">=" | "OR" | "AND" | "XOR";
empty     = ;
